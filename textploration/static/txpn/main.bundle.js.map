{"version":3,"sources":["/Users/sebastian/workspace/textploration/txpn/src async","/Users/sebastian/workspace/textploration/txpn/src/app/adventurers/adventurer.service.ts","/Users/sebastian/workspace/textploration/txpn/src/app/adventurers/adventurer.ts","/Users/sebastian/workspace/textploration/txpn/src/app/adventurers/adventurers.component.css","/Users/sebastian/workspace/textploration/txpn/src/app/adventurers/adventurers.component.html","/Users/sebastian/workspace/textploration/txpn/src/app/adventurers/adventurers.component.ts","/Users/sebastian/workspace/textploration/txpn/src/app/app.component.css","/Users/sebastian/workspace/textploration/txpn/src/app/app.component.html","/Users/sebastian/workspace/textploration/txpn/src/app/app.component.ts","/Users/sebastian/workspace/textploration/txpn/src/app/app.module.ts","/Users/sebastian/workspace/textploration/txpn/src/app/utils/async.ts","/Users/sebastian/workspace/textploration/txpn/src/app/worlds/world-detail.component.html","/Users/sebastian/workspace/textploration/txpn/src/app/worlds/world-detail.component.ts","/Users/sebastian/workspace/textploration/txpn/src/app/worlds/world.service.ts","/Users/sebastian/workspace/textploration/txpn/src/app/worlds/world.ts","/Users/sebastian/workspace/textploration/txpn/src/app/worlds/worlds.component.css","/Users/sebastian/workspace/textploration/txpn/src/app/worlds/worlds.component.html","/Users/sebastian/workspace/textploration/txpn/src/app/worlds/worlds.component.ts","/Users/sebastian/workspace/textploration/txpn/src/environments/environment.ts","/Users/sebastian/workspace/textploration/txpn/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sebastian/workspace/textploration/txpn/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\n\nimport { resolveLater } from 'app/utils/async';\n\nimport { Adventurer } from './adventurer';\n\n\nclass Subscription {\n\n}\n\n@Injectable()\nexport class AdventurerService {\n  private adventurer: Adventurer;\n  private newAdventurerSource = new Subject<Adventurer>();\n\n  newAdventurer$ = this.newAdventurerSource.asObservable();\n\n  getAdventurer(): Adventurer {\n    return this.adventurer || new Adventurer('');\n  }\n\n  setAdventurer(adventurer: Adventurer): void {\n    this.adventurer = adventurer;\n    this.newAdventurerSource.next(this.adventurer);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sebastian/workspace/textploration/txpn/src/app/adventurers/adventurer.service.ts","\nexport class Adventurer {\n  private id: number;\n  constructor(public name: string) {\n    this.id = Math.round(Math.random() * (Math.pow(10, 10)));\n  }\n\n  toString(): string {\n    return `Adventurer(name='${this.name}', id=${this.id})`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sebastian/workspace/textploration/txpn/src/app/adventurers/adventurer.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sebastian/workspace/textploration/txpn/src/app/adventurers/adventurers.component.css\n// module id = ../../../../../src/app/adventurers/adventurers.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"adventurer section\\\">\\n  <h2>Create your Adventurer</h2>\\n  <div class=\\\"input-text\\\">\\n    <label for=\\\"idAdventurer\\\"></label>\\n    <input id=\\\"idAdventurer\\\"\\n           [(ngModel)]=\\\"adventurer.name\\\"\\n           placeholder=\\\"Adven Von Turer\\\">        \\n  </div>\\n\\n  <button (click)=\\\"onSelectAdventurer(adventurer)\\\">Done</button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sebastian/workspace/textploration/txpn/src/app/adventurers/adventurers.component.html\n// module id = ../../../../../src/app/adventurers/adventurers.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\nimport { Adventurer } from './adventurer';\nimport { AdventurerService } from './adventurer.service';\n\n@Component({\n  selector: 'txpn-adventurers',\n  templateUrl: './adventurers.component.html',\n  styleUrls: ['./adventurers.component.css'],\n  // providers: [AdventurerService],\n})\nexport class AdventurersComponent implements OnInit {\n  adventurer: Adventurer;\n\n  constructor(private adventurerService: AdventurerService) {}\n\n  ngOnInit(): void {\n    this.getAdventurer();\n  }\n\n  getAdventurer(): void {\n    this.adventurer = this.adventurerService.getAdventurer();\n  }\n\n  onSelectAdventurer(adventurer: Adventurer): void {\n    this.adventurerService.setAdventurer(adventurer);\n    this.getAdventurer();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sebastian/workspace/textploration/txpn/src/app/adventurers/adventurers.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sebastian/workspace/textploration/txpn/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container screen\\\">\\n  <div class=\\\"title section\\\">\\n    <h1>\\n      {{ title | titlecase }}\\n      <br/>\\n      <small>{{ subtitle }}</small>\\n    </h1>\\n  </div>\\n\\n  <a routerLink=\\\"/adventurers\\\">Adventurer</a>\\n  <router-outlet></router-outlet>\\n  <a routerLink=\\\"/worlds\\\">Worlds</a>\\n  <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sebastian/workspace/textploration/txpn/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'Textploration';\n  subtitle = 'A game.';\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sebastian/workspace/textploration/txpn/src/app/app.component.ts","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from 'app/app.component';\nimport { AdventurersComponent } from 'app/adventurers/adventurers.component';\nimport { AdventurerService } from 'app/adventurers/adventurer.service';\nimport { WorldsComponent } from 'app/worlds/worlds.component';\nimport { WorldDetailComponent } from 'app/worlds/world-detail.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdventurersComponent,\n    WorldsComponent,\n    WorldDetailComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule.forRoot([\n      {\n        path: 'adventurers',\n        component: AdventurersComponent,\n      },\n      {\n        path: 'worlds',\n        component: WorldsComponent,\n      },\n    ]),\n  ],\n  providers: [AdventurerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/sebastian/workspace/textploration/txpn/src/app/app.module.ts","\nexport  function resolveLater(value: any, seconds: number): Promise<any> {\n  return new Promise(\n    resolve => setTimeout(\n      () => resolve(value),\n      seconds * 1000)\n  );\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sebastian/workspace/textploration/txpn/src/app/utils/async.ts","module.exports = \"<div *ngIf=\\\"world\\\">\\n\\t{{ world.name }} ({{ world.id }})\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sebastian/workspace/textploration/txpn/src/app/worlds/world-detail.component.html\n// module id = ../../../../../src/app/worlds/world-detail.component.html\n// module chunks = 1","import { Component, Input } from '@angular/core';\nimport { World } from './world';\n\n@Component({\n  selector: 'txpn-world-detail',\n  templateUrl: './world-detail.component.html',\n  // styleUrls: ['./world-detail.component.css']\n  styleUrls: []\n})\nexport class WorldDetailComponent {\n  @Input() world: World;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sebastian/workspace/textploration/txpn/src/app/worlds/world-detail.component.ts","import { Injectable } from '@angular/core';\n\nimport { resolveLater } from 'app/utils/async'\n\nimport { World } from './world'\n\nconst WORLDS: World[] = [\n  new World({\n    id: 1,\n    name: 'Nightvale',\n  }),\n  new World({\n    id: 2,\n    name: 'Desert Bluffs',\n  }),\n];\n\n@Injectable()\nexport class WorldService {\n\n  getWorlds(): Promise<World[]> {\n    return resolveLater(WORLDS, .5);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sebastian/workspace/textploration/txpn/src/app/worlds/world.service.ts","export class World {\n  private id: number;\n  public name: string;\n  constructor({id, name}: {id: number, name: string}) {\n    this.id = id;\n    this.name = name;\n  };\n  turn(): void {};\n}\n\n\n// WEBPACK FOOTER //\n// /Users/sebastian/workspace/textploration/txpn/src/app/worlds/world.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sebastian/workspace/textploration/txpn/src/app/worlds/worlds.component.css\n// module id = ../../../../../src/app/worlds/worlds.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"worlds section\\\">\\n  <h2>Choose a world:</h2>\\n  \\n  <h3>\\n    <span *ngIf=\\\"adventurer && adventurer.name;\\\">\\n      {{ adventurer.name }} ({{ adventurer.id }}) is off to...\\n    </span>\\n  </h3>\\n  \\n  <ul>\\n    <li *ngFor=\\\"let world of worlds\\\">\\n      <h2 [class.selected]=\\\"world === selectedWorld\\\"\\n          (click)=\\\"onSelectWorld(world)\\\">\\n        {{ world.name }}\\n      </h2>\\n    </li>\\n  </ul>  \\n\\n  <txpn-world-detail [world]=\\\"selectedWorld\\\"></txpn-world-detail>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/sebastian/workspace/textploration/txpn/src/app/worlds/worlds.component.html\n// module id = ../../../../../src/app/worlds/worlds.component.html\n// module chunks = 1","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription }   from 'rxjs/Subscription';\n\nimport { Adventurer } from 'app/adventurers/adventurer'\nimport { AdventurerService } from 'app/adventurers/adventurer.service'\n\nimport { World } from './world'\nimport { WorldService } from './world.service'\n\n@Component({\n  selector: 'txpn-worlds',\n  templateUrl: './worlds.component.html',\n  styleUrls: ['./worlds.component.css'],\n  // providers: [WorldService, AdventurerService],\n  providers: [WorldService],\n})\nexport class WorldsComponent implements OnInit, OnDestroy {\n  adventurer: Adventurer;\n  adventurerSubscription: Subscription;\n  worlds: World[];\n  selectedWorld: World;\n\n  constructor(private worldService: WorldService,\n              private adventurerService: AdventurerService) {}\n\n  ngOnInit(): void {\n    this.getWorlds();\n    this.subscribeToAdventurer();\n  }\n\n  ngOnDestroy() {\n    this.adventurerSubscription.unsubscribe();\n  }\n\n  getWorlds(): void {\n    this.worldService.getWorlds().then(\n      worlds => this.worlds = worlds\n    );\n  }\n\n  subscribeToAdventurer(): void {\n    this.adventurer = this.adventurerService.getAdventurer();\n    this.adventurerSubscription = this.adventurerService.newAdventurer$.subscribe(\n      adventurer => this.adventurer = adventurer\n    );\n  }\n\n  onSelectWorld(world: World): void {\n    this.selectedWorld = world;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/sebastian/workspace/textploration/txpn/src/app/worlds/worlds.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/sebastian/workspace/textploration/txpn/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/sebastian/workspace/textploration/txpn/src/main.ts"],"sourceRoot":"webpack:///"}